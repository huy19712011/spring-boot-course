spring.application.name=sb-ecom

logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss.SSS}) %yellow(%-5level) %red([%thread]) %blue(%logger{15}) - %msg%n}

spring.profiles.active = default

#SQL Server
spring.datasource.url=jdbc:sqlserver://${DATABASE_HOST:localhost};databaseName=sb_ecom;trustServerCertificate=true;
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:123456}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

##############################################################################
# Cho phep dung .sql de tao bang va insert du lieu
# following need for creating tables
#script-based initialization is performed by default only for embedded databases (e.c H2),
#to always initialize a database using scripts, we'll have to use:
spring.jpa.generate-ddl=true

# Cho phep dung dong thoi Hibernate va .sql de tao bang
#after Hibernate schema creation is performed then additionally schema.sql is read
# for any additional schema changes and data.sql is executed to populate the database.
#both Hibernate automatic schema generation in conjugation with script-based schema creation and data population,
# we'll have to use:
spring.jpa.defer-datasource-initialization=true

# following need for add data into table (not need in H2-Database)
#to always initialize a database using scripts, we'll have to use:
#embedded, never, always
spring.sql.init.mode=always

#disable Hibernate automatic schema creation
#This will ensure that script-based initialization is performed using schema.sql and data.sql directly.
#update, create, create-drop, validate, none (5 options default=none for SQL Server, MySQL, ...; default = create-drop for H2-Database)
spring.jpa.hibernate.ddl-auto=create

#Show SQL statements on console
logging.level.net.ttddyy.dsproxy.listener=debug

#customizing column name
#spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

###############################################################################
#spring.security.user.name=fpoly
#spring.security.user.password=password
#spring.security.user.roles=ADMIN, USER, MANAGER

###############################################################################
spring.app.jwtSecret=mySecretKey123912738aopsgjnspkmndfsopkvajoirjg94gf2opfng2moknm
spring.app.jwtExpirationMs=300000000
spring.ecom.app.jwtCookieName=springBootEcom

project.image=images/

#STRIPE KEY
#stripe.secret.key=${STRIPE_SECRET_KEY}
stripe.secret.key=sk_test_YOUR_SECRET_KEY

# Needed if you are using elastic beanstalk
#server.port=5000
frontend.url=http://localhost:5173/
image.base.url=http://localhost:8080/images

